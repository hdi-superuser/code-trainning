Ex1::Knapsack problems {
    backtrack(int i, int sw, int sv) {
        if (i == n) update result + exit;
        backtrack(i+1, sw, sv);
        if (sw + b[i+1] <= W) backtrack(i+1, sw+b[i+1], sv+a[i+1]);
    }

    f[i][j] = max([i-1][j-1], f[i-1][j-w[i]] + v[i])
}

Ex2::LIS {
    backtrack(int i, int len) {
        if (i == n+1) update result + exit;
        for (int j = i + 1; j <= n+1; j++)
            if (a[j] > a[i]) backtrack(i, len+1);
    }

    f[i] = max(f[j]) + 1 \1 <= j < i && a[i] > a[j]\
    f[i] = 1 \j >= i || a[i] <= a[j]\
}

main() {
    - dp co y tuong xuat phat tu thuat toan quay lui, tuy nhien
    bo di nhung phuong an ko can thiet va lam giam so trang thai.
    - Loi giai bai toan dp gom co 4 phan:
        + Xay dung ham dp: Lay moi tham so dieu kien cua ham quay lui
        de lam tham so cho cong thuc dp, cong thuc nay tra ve tham so muc tieu.
        + Xay dung cong thuc truy hoi: Dua vao cac trang thai cua quay lui.
        + Xac dinh cach khoi tao mang dp: Dua tren cac trang thai dau tien cua ham quay lui.
        + Xac dinh cach tinh ket qua cua bai toan dua tren cac ket qua da tinh duoc.
}
